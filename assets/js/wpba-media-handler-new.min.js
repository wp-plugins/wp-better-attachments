/**
* Updates Sort Order
*/
function updateSortOrder(elem) {
	var $ = jQuery,
			sortLi = elem.find('li'),
			sortOrder = [],
			ajaxData = { 'action' : 'wpba_update_sort_order'},
			saveElem = $('.wpba-saving')
	;
	sortLi.each(function() {
		var that = $(this);
		sortOrder.push(that.data('id'));
	});

	ajaxData.attids = sortOrder;
	saveElem.removeClass('hide');
	$.post(ajaxurl, ajaxData, function(data) {
		saveElem.addClass('hide');
		return false;
	});
}


/**
* Image Sorting Click Handler
*/
function updateSortOrderClickHandler() {
	var $ = jQuery,
			sortableImageElem = $( "#wpba_image_sortable" )
	;
	sortableImageElem.sortable();
	sortableImageElem.disableSelection();
	sortableImageElem.on( "sortupdate", function( e, ui ) {
		updateSortOrder( sortableImageElem );
	});
}


/**
* Unattachs an attachment
*/
function unattachAttachment(that) {
	var $ = jQuery,
			sortableImageElem = $( "#wpba_image_sortable" ),
			linkParent = that.parent('li').parent('ul'),
			attachmentId = linkParent.data('id'),
			ajaxData = {
				'action' : 'wpba_unattach_attachment',
				'attachmentid' : attachmentId
			},
			saveElem = $('.wpba-saving')
	;
	saveElem.removeClass('hide');
	$.post(ajaxurl, ajaxData, function(data) {
		var resp = $.parseJSON(data);
		if (resp) {
			linkParent.parent('li').remove();
			updateSortOrder( sortableImageElem );
		}
	});
}


/**
* Unattach Image Click Handler
*/
function unattachAttachmentClickHandler() {
	$ = jQuery;
	$('.wpba-unattach').on('click', function(e){
		unattachAttachment($(this));
		e.preventDefault();
		return false;
	});
}


/**
* Unattach Library Click Handler
*/
function unattachAttachmentLibraryClickHandler() {
	$ = jQuery;
	$('.wpba-unattach-library').on('click', function(e){
		var that = $(this),
				attachmentId = that.data('id'),
				ajaxData = {
					'action' : 'wpba_unattach_attachment',
					'attachmentid' : attachmentId
				};
		$.post(ajaxurl, ajaxData, function(data) {
			var resp = $.parseJSON(data);
			if (resp) {
				$('#post-'+attachmentId+' .reattach').remove();
				$('#post-'+attachmentId+' .unattach').remove();
				$('#post-'+attachmentId+' .view').empty().append('<a href="http://localhost/~mothership/plugin-dev/?attachment_id='+attachmentId+'" title="View “Hello world!”" rel="permalink">View</a>');
				$('#post-'+attachmentId+' .column-parent').empty().append('(Unattached)<br><a class="hide-if-no-js" onclick="findPosts.open' + "( 'media[]','"+attachmentId+"'"+' ); return false;" href="#the-list">Attach</a>');
			}
		});
		e.preventDefault();
		return false;
	});
}


/**
* Deletes and attachment
*/
function deleteAttachment(that) {
	var $ = jQuery,
			makeSure = confirm("Are you sure you want to permanently delete this attachment? This will permanently remove the attachment from the media gallery!!"),
			saveElem = $('.wpba-saving'),
			sortableImageElem = $( "#wpba_image_sortable" )
	;
	if ( makeSure ) {
		var linkParent = that.parent('li').parent('ul'),
				attachmentId = linkParent.data('id'),
				ajaxData = {
					'action' : 'wpba_delete_attachment',
					'attachmentid' : attachmentId
				}
		;

		saveElem.removeClass('hide');
		$.post(ajaxurl, ajaxData, function(data) {
			var resp = $.parseJSON(data);
			if (resp) {
				linkParent.parent('li').remove();
				updateSortOrder( sortableImageElem );
			}
			saveElem.addClass('hide');
		});
	}
}


/**
* Delete Attachment Click Handler
*/
function deleteAttachmentClickHandler(){
	$ = jQuery;
	$('.wpba-delete').on('click', function(e){
		deleteAttachment($(this));
		e.preventDefault();
		return false;
	});
}


/**
* Refresh attachments
*/
function refreshAttachments(id) {
	var $ = jQuery,
			ajaxData = {
				action: 'wpba_refresh_attachments',
				postid: $('.wpba').data('postid')
			},
			sortableImageElem = $( "#wpba_image_sortable" )
	;
	$.getJSON(ajaxurl, ajaxData, function(resp){
		sortableImageElem.empty().append(resp);
		resetClickHandlers();
	});

	return false;
}


/**
* Edit Modal Click Handler
*/
function editModalClickHandler() {
	$ = jQuery;
	if($('#wpba_edit_screen').length > 0 ) {
		// Edit Modal Open
		$('.wpba-edit').on('click',function(e){
			var that = $(this);
			attid = showEditScreenModal(that);
			e.preventDefault();
			return false;
		});

		// Edit Modal Close
		$('#wpba_edit_screen_close').on('click', function(e){
			var that = $(this);
			refreshAttachments(attid);
			$('#wpba_edit_screen').hide();
			e.preventDefault();
			return false;
		});

	} // editmodal
}


/**
* Show Edit Screen Modal
*/
function showEditScreenModal(that) {
	var editScreen = $('#wpba_edit_screen'),
		editScreenIframe = editScreen.find('iframe'),
		attid
	;
	// Add the correct edit link to the iframe
	editScreenIframe.attr('src', that.attr('href'));

	// Once the iframe loads add the required css, add click handler, and show editor
	editScreenIframe.load(function() {
		css = '#adminmenuwrap,' +
					'#adminmenuback,' +
					'#wpadminbar,' +
					'#screen-meta-links,' +
					'#wpfooter,' +
					'.add-new-h2 { display: none; }' +
					'#wpcontent { width: 96%; margin: 0 2%; }';
		editScreenIframe.contents().find("head").append($("<style type='text/css'>"+css+"</style>"));
		attid = editScreenIframe.contents().find("#post_ID").val();

		// This will help with the fouc when updating an attachment
		editScreenIframe.contents().find('#publish').on('click', function(){
			editScreenIframe.hide();
			editScreenIframe.load(function() {
				editScreenIframe.contents().find("head").append($("<style type='text/css'>"+css+"</style>"));
				editScreenIframe.show();
			});
		});

		// Show Screen
		editScreen.show();

		return attid;
	});
}

/**
* Reset Click Handlers
*/
function resetClickHandlers() {
	updateSortOrderClickHandler();
	unattachAttachmentClickHandler();
	unattachAttachmentLibraryClickHandler();
	deleteAttachmentClickHandler();
	editModalClickHandler();
}

/* **********************************************
     Begin wpba-attachment.js
********************************************** */

//@codekit-prepend wpba-functions.js
jQuery(function($){
	$(window).load(function(){
		updateSortOrderClickHandler();
		unattachAttachmentClickHandler();
		unattachAttachmentLibraryClickHandler();
		deleteAttachmentClickHandler();
		editModalClickHandler();
	}); // $(window).load()
}(jQuery));

/* **********************************************
     Begin wpba-media-handler-new.js
********************************************** */

// @codekit-prepend wpba-attachment.js
jQuery(function($){
	$(window).load(function(){
		var file_frame,
			saveElem = $('.wpba-saving');

		/**
		* Attach Image
		*/
		// Uploading files
		$('#wpba_attachments_button, #wpba_form_attachments_button').on('click', function( event ){

			event.preventDefault();
			var that = $(this);
			// If the media frame already exists, reopen it.
			if ( file_frame ) {
				file_frame.open();
				return;
			}

			// Create the media frame.
			file_frame = wp.media.frames.file_frame = wp.media({
				title: $( this ).data( 'uploader_title' ),
				button: {
					text: $( this ).data( 'uploader_button_text' )
				},
				multiple: true
			});

			file_frame.on( 'select', function() {
				var attachments = file_frame.state().get('selection').toJSON(),
						ajaxData = {
							attachments: attachments,
							action: 'wpba_add_attachment',
							parentid: $('.wpba').data('postid')
						}
				;
				saveElem.removeClass('hide');
				$.post(ajaxurl, ajaxData, function(data) {
					resp = $.parseJSON(data);
					if ( resp ) {
						$( "#wpba_image_sortable" ).append( resp.image );
						updateSortOrder($( "#wpba_image_sortable" ));
						resetClickHandlers();
					}

				});

			});

			// Finally, open the modal
			file_frame.open();
		});

	}); // $(window).load()
}(jQuery));